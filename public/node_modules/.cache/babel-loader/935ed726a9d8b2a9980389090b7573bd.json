{"ast":null,"code":"var _jsxFileName = \"/Users/khemi/Documents/Nology/Development/COURSE/react-code-along/src/components/ArtistTile/ArtistTile.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./ArtistTile.scss\";\nimport Button from \"../Button/Button\";\nimport whiteCross from \"../../assets/images/white-cross.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ArtistTile = props => {\n  _s();\n\n  const {\n    imgSrc,\n    title,\n    text\n  } = props;\n  const [showText, setShowText] = useState(false);\n\n  const handleClick = () => {\n    setShowText(!showText);\n  };\n\n  const buttonJSX = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"artist-tile__content artist-tile__content--button\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"artist-tile__heading\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: handleClick,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        buttonText: \"Find out more\",\n        isSecondary: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n\n  const textJSX = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"artist-tile__content artist-tile__content--text\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: whiteCross,\n      className: \"artist-tile__cross\",\n      onClick: handleClick,\n      alt: \"Close text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"artist-tile__heading\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), text.split(\".\").map((sentence, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: sentence + \".\"\n    }, title + index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"artist-tile\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: imgSrc,\n      className: \"artist-tile__img\",\n      alt: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), showText ? textJSX : buttonJSX]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ArtistTile, \"zALVG9dRqkZEtsE6RTdxJ4IWmsE=\");\n\n_c = ArtistTile;\nexport default ArtistTile;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArtistTile\");","map":{"version":3,"sources":["/Users/khemi/Documents/Nology/Development/COURSE/react-code-along/src/components/ArtistTile/ArtistTile.jsx"],"names":["React","useState","Button","whiteCross","ArtistTile","props","imgSrc","title","text","showText","setShowText","handleClick","buttonJSX","textJSX","split","map","sentence","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,mBAAP;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAAA;;AAC1B,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAA0BH,KAAhC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMU,WAAW,GAAG,MAAM;AACxBD,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,GAFD;;AAIA,QAAMG,SAAS,gBACb;AAAK,IAAA,SAAS,EAAC,mDAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,sBAAd;AAAA,gBAAsCL;AAAtC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,OAAO,EAAEI,WAAd;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,UAAU,EAAE,eAApB;AAAqC,QAAA,WAAW,EAAE;AAAlD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AASA,QAAME,OAAO,gBACX;AAAK,IAAA,SAAS,EAAC,iDAAf;AAAA,4BACE;AAAK,MAAA,GAAG,EAAEV,UAAV;AAAsB,MAAA,SAAS,EAAC,oBAAhC;AAAqD,MAAA,OAAO,EAAEQ,WAA9D;AAA2E,MAAA,GAAG,EAAC;AAA/E;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,SAAS,EAAC,sBAAd;AAAA,gBAAsCJ;AAAtC;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGC,IAAI,CAACM,KAAL,CAAW,GAAX,EAAgBC,GAAhB,CAAoB,CAACC,QAAD,EAAWC,KAAX,kBACnB;AAAA,gBAAwBD,QAAQ,GAAG;AAAnC,OAAQT,KAAK,GAAGU,KAAhB;AAAA;AAAA;AAAA;AAAA,YADD,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACE;AAAK,MAAA,GAAG,EAAEX,MAAV;AAAkB,MAAA,SAAS,EAAC,kBAA5B;AAA+C,MAAA,GAAG,EAAED,KAAK,CAACE;AAA1D;AAAA;AAAA;AAAA;AAAA,YADF,EAEGE,QAAQ,GAAGI,OAAH,GAAaD,SAFxB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAjCD;;GAAMR,U;;KAAAA,U;AAmCN,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./ArtistTile.scss\";\n\nimport Button from \"../Button/Button\";\nimport whiteCross from \"../../assets/images/white-cross.png\";\n\nconst ArtistTile = props => {\n  const { imgSrc, title, text } = props;\n  const [showText, setShowText] = useState(false);\n\n  const handleClick = () => {\n    setShowText(!showText);\n  };\n\n  const buttonJSX = (\n    <div className=\"artist-tile__content artist-tile__content--button\">\n      <h3 className=\"artist-tile__heading\">{title}</h3>\n      <div onClick={handleClick}>\n        <Button buttonText={\"Find out more\"} isSecondary={true} />\n      </div>\n    </div>\n  );\n\n  const textJSX = (\n    <div className=\"artist-tile__content artist-tile__content--text\">\n      <img src={whiteCross} className=\"artist-tile__cross\" onClick={handleClick} alt=\"Close text\" />\n      <h3 className=\"artist-tile__heading\">{title}</h3>\n      {text.split(\".\").map((sentence, index) => (\n        <p key={title + index}>{sentence + \".\"}</p>\n      ))}\n    </div>\n  );\n\n  return (\n    <div className=\"artist-tile\">\n      <img src={imgSrc} className=\"artist-tile__img\" alt={props.title} />\n      {showText ? textJSX : buttonJSX}\n    </div>\n  );\n};\n\nexport default ArtistTile;\n"]},"metadata":{},"sourceType":"module"}