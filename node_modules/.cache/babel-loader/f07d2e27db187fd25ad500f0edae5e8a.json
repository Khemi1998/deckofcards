{"ast":null,"code":"var _jsxFileName = \"/Users/khemi/Documents/Nology/Development/COURSE/project/DeckCards-mini-project-/src/App.jsx\";\nimport \"./App.scss\";\nimport Card from \"./components/Card/Card\";\nimport cardDeck from \"./data/data\"; // Challenge\n// There is a gist with the data you need below\n// Create a new file in data and copy the array of card Objects into it\n// Create a reusable component to display each CARD object in the array\n// Map over the data file and create a component for each object\n// Add some conditional styles based on suit\n// EXTENSION: Can you shuffle the deck before mapping? \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"cards\",\n      CardArr: cardDeck\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/khemi/Documents/Nology/Development/COURSE/project/DeckCards-mini-project-/src/App.jsx"],"names":["Card","cardDeck","App"],"mappings":";AAAA,OAAO,YAAP;AACA,OAAOA,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,aAArB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAwB,MAAA,OAAO,EAAED;AAAjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;KAAMC,G;AAQN,eAAeA,GAAf","sourcesContent":["import \"./App.scss\";\nimport Card from \"./components/Card/Card\";\nimport cardDeck from \"./data/data\";\n\n// Challenge\n// There is a gist with the data you need below\n// Create a new file in data and copy the array of card Objects into it\n// Create a reusable component to display each CARD object in the array\n// Map over the data file and create a component for each object\n// Add some conditional styles based on suit\n// EXTENSION: Can you shuffle the deck before mapping? \n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <Card className=\"cards\" CardArr={cardDeck}/>\n    </div>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}